{
  "hash": "17de53dbebd5688df147391c103be66e",
  "result": {
    "markdown": "---\ntitle: \"가격변동과 최적화\"\nbibliography: pricing.bib\nfilters:\n   - lightbox\nlightbox: auto\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n일물일가 원칙을 폐기하고 장소와 시간 제품과 서비스에 따라 달리 고객별로 가격책정을 달리한다는 정책을 수립했다면, 가격을 올리거나 내릴 때 어떤 영향을 미치게 되는지 이해하는 것이 선행하여 필요하다. 먼저 가격 변화에 따른 손익분기점의 변화를 살펴보자.\n\n# 가격 변화 손익분기점\n\n[Understanding The Financial Implications Of Alternative Price Levels [@nagle2017strategy]]{.aside}\n\n[**공헌이익(CM, Contribution Margin):** 판매수량 변화에 따라 변하는 총수익과 총변동비의 차이로 매출액 중에서 고정비를 회수하고 이익을 획득하는데 공헌하는 금액. 자세한 사항은 [나무위키 참조](https://namu.wiki/w/공헌이익)]{.aside}\n\n## 가격 인하\n\n가격을 인하하게 되면 판매량이 보통 증가하게 된다. 하지만 가격인하에 따라 공헌이익($P-C$)은 줄게 되어 이익이 줄게 되고 판매량 증가에 따라 변동비용이 증가하게 되어 역시 이익이 줄게 된다. 따라서 이와 같은 두 이익 감소를 상쇄하고 이익을 남길 수 있는 손익분기점 판매량을 계산해보자.\n\n![](images/bep_price_cut.jpg)\n\n\n- 단위 가격($P$): 10\n- 가격인하($\\Delta P$): - 0.5\n- 단위 변동비($VC$): 5.5\n- (단위) 공헌이익(MC, $P-VC$): (10-5.5) = 4.5\n- 판매량($Q$): 4,000\n\n$$\\frac{\\Delta Q}{Q} = \\frac{- \\Delta P}{CM + \\Delta P} = \\frac{- \\Delta P}{(P-VC) + \\Delta P}$$\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nprice = 10\nvc = 5.5\ndelta_price = - 0.5\nquantity = 4000\n\ndelta_quantity = -delta_price / ((10-5.5) + delta_price)\ndelta_quantity\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.125\n```\n:::\n:::\n\n\n따라서 12% 만큼 판매량이 늘어야 손익분기점을 넘길 수 있다. 즉,\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbep_quantity <- delta_quantity * quantity\n```\n:::\n\n\n500 이상 판매량이 증가해야 가격인하에 따른 이익을 볼 수 있다.\n\n## 가격인상\n\n가격을 인상하게 되면 판매량이 보통 감소하게 된다. 하지만 가격인상에 따라 공헌이익($P-C$)은 늘게되어 판매 단위당 이익은 늘게 되지만, 판매량 감소에 따라 변동비용이 감소하게 되어 역시 이익도 늘게 된다. 따라서 이와 같은 판매량 감소에도 불그하고 이익을 남길 수 있는 최소 손익분기점 판매량을 계산해보자.\n\n![](images/bep_price_increase.jpg)\n\n\n- 단위 가격($P$): 10\n- 가격인하($\\Delta P$): + 1\n- 단위 변동비($VC$): 5.5\n- (단위) 공헌이익(MC, $P-VC$): (11-5.5) = 5.5\n- 판매량($Q$): 4,000\n\n$$\\frac{\\Delta Q}{Q} = \\frac{- \\Delta P}{CM + \\Delta P} = \\frac{- \\Delta P}{(P-VC) + \\Delta P}$$\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nprice = 11\nvc = 5.5\ndelta_price = +1\nquantity = 4000\n\ndelta_quantity = -delta_price / ((11-5.5) + delta_price)\ndelta_quantity\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.1538462\n```\n:::\n:::\n\n\n따라서 -15% 만큼 판매량이 줄어야 손익분기점을 넘길 수 있다. 즉,\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbep_quantity <- delta_quantity * quantity\n```\n:::\n\n\n-615 이상 판매량이 감소해야 가격인상에 따른 이익을 볼 수 있다.\n\n\n# (수식) 최적 가격도출\n\n[Pricing Optimization: How to find the price that maximizes your profit, [출처](https://insightr.wordpress.com/2017/08/27/pricing-optimization-how-to-find-the-price-that-maximizes-your-profit/)]{.aside}\n\n최적가격을 함수의 형태로 표현해보자. 먼저, 가격변화에 따른 수요물량 변화를 1차 선형식으로 가정하여 표현해보자. $Q$는 수요물량, $p$는 가격이다.\n\n$$Q(p) = \\alpha + \\beta \\times p$$\n\n매출은 가격에 수요물량을 곱하면 되기 때문에 수식으로 다음과 같이 표현한다.\n\n$$p \\times Q(p) = p \\times \\alpha + p \\times \\beta \\times p$$\n\n$R$은 매출로 보기 좋게 정리하면 다음과 같다.\n\n$$R(p) = Q(p) \\times p =  \\alpha p +  \\beta \\times p^2$$\n이익($S(p)$)은 가격에서 비용을 제하고 수요물량을 곱하면 구할 수 있다.\n\n$$S(p) = Q(p) \\times (p-c) =  \\beta \\times p^2 -\\beta p c + \\alpha(p-c)$$\n\n이제 미분을 하여 0이 되는 값이 최대가 되기 때문에 매출이 최대가 되는 가격과 이익이 최대가 되는 가격을 수식으로 도출해보자.\n\n먼저 매출이 최대가 되는 최적 가격 ($p^*$)을 구해보자.\n\n$$R(p) = Q(p) \\times p =  \\alpha p +  \\beta \\times p^2 \\\\\n\\frac{\\partial{R(p)}}{\\partial{p}} = \\alpha + 2 \\beta p = 0 \\\\\np^* = \\frac{-\\alpha}{2\\beta}$$\n\n다음으로 순이익이 최대가 되는 최적 가격 ($p^*$)을 구해보자.\n\n$$S(p) = Q(p) \\times (p-c) =  \\beta \\times p^2 -\\beta p c + \\alpha(p-c)$$\n$$\\frac{\\partial{S(p)}}{\\partial{p}} = 2 \\beta p - \\beta c +\\alpha = 0$$\n$$p^* = \\frac{\\beta c -\\alpha}{2\\beta}$$\n\n\n수식을 통해 도출된 매출을 극대화 시키는 매출가격과 순익을 극대화하는 순익가격 그리고 각 가격에 해당되는 물량을 `ggplot`으로 시각화한다.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggrepel)\n\nsegment_tbl <- tibble( x = c(50, \n                             50+150, \n                             50+150+350, \n                             50+150+350+250,\n                             50+150+350+250+200),\n                       y = c(20, 15, 10, 8, 6))\n\n\n## Price Response 곡선 ------------\nmodel_tbl <- segment_tbl %>% \n  rename(물량 = x, 가격 = y)\n\nprice_response_lm <- lm(물량 ~ 가격, data = model_tbl)\nalpha <- coef(price_response_lm)[1] %>% as.numeric # 1324.379 \nbeta  <- coef(price_response_lm)[2] %>% as.numeric #-68.1677\n\n## 가격 변환에 따른 매출 순익 함수\ncalculate_revenue <- function(p) alpha * p + beta * p^2\ncalculate_profit  <- function(p) beta * p^2 - beta * p * 5 + alpha*(p-5)\n\n## 최적 가격 - 매출, 순익\nrevenue_price <- - alpha / (2*beta)\nprofit_price  <- (beta * 5 - alpha) / (2*beta)\n\n## 시각화 -----\n\nggplot() +\n  xlim(0, 25)+\n  geom_function(fun = calculate_revenue, color = \"black\") +\n  geom_function(fun = calculate_profit, color = \"blue\") +\n  geom_point(aes( x = revenue_price, \n                  y = calculate_revenue(revenue_price)), color = \"black\") +\n  geom_point(aes( x = profit_price,  \n                  y = calculate_profit(profit_price)), color = \"red\") +\n  theme_bw(base_family = \"NanumGothic\") +\n  # annotate(\"text\", x = 20, y = 6, label = \"변동비($5)\", size = 3)  +\n  geom_text_repel(aes(x = revenue_price, \n                      y = calculate_revenue(revenue_price), label = glue::glue(\"매출가격:{round(revenue_price,2)}\\n물량:{scales::comma(calculate_revenue(revenue_price))}\"))) +\n  geom_text_repel(aes(x = profit_price, \n                      y = calculate_profit(profit_price), label = glue::glue(\"순익가격:{round(profit_price,2)}\\n물량:{scales::comma(calculate_profit(profit_price))}\"))) +\n  labs(x = \"가격\",\n       y = \"수요물량\",\n       title = \"매출, 순익 고려한 최적 가격결절\")\n```\n\n::: {.cell-output-display}\n![](price_opt_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n# 가격 최적화\n\n최적 가격결정을 위해서 몇가지 가정을 할 필요가 있고 가격 변동에 따른 수요함수를 추정할 필요도 있다. 앞선 수요함수 추정 기법을 통해서 수요함수를 올바르게 추정했다고 가정하자. 가격수요 실증 데이터를 통해 수요함수를 다음과 같은 선형회귀식으로 추정했다.\n\n[출처: [Business Analytics with R - DRAFT](https://bookdown.org/jeffreytmonroe/business_analytics_with_r7/marketing.html) Optimal Product Mix]{.aside}\n\n- 수요함수(가격수요 회귀식): $d(P) = 209000 - 130 \\times p$\n- 총 공헌이익: $m(P) = d(P) \\times (P-C)$\n  - 단위가격, 줄여서 단가: $P$\n  - 단위비용($C$): 675\n  - 단위이익: $P-C$\n\n상기 최적화 문제는 미분을 한 후에 0 이 되는 $P$ 값을 계산하면 된다. 따라서,\n\n$m'(P) = d'(P) \\times (P - C) + d(P) = 0$\n\n식을 정리하면 이익이 극대화 되는 $P^*$ 는 다음과 같다.\n\n$d(P^*) = - d'(P^*) \\times (P^* - C)$\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\ndemand_fn <- function(p) {209000 - 130 * p }\n\ndemand_tbl <- tibble(price = seq(0, 2000, by = 10))\n\nggplot(demand_tbl, aes(x = price)) + \n  stat_function(fun = demand_fn) +\n  geom_hline(yintercept = 0, linetype = 2) +\n  theme_bw(base_family = \"NanumGothic\") +\n  labs(x = \"가격\",\n       y = \"수량\") +\n  scale_x_continuous(labels = scales::comma) +\n  scale_y_continuous(labels = scales::comma)\n```\n\n::: {.cell-output-display}\n![](price_opt_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n$d(P^*) = - d'(P^*) \\times (P^* - C)$ 식에 상기 같을 집어넣어 정리하면 다음과 같이 최적 가격을 구할 수 있다.\n\n$$209000-130 \\times P = 130 \\times (P-675)$$\n\n\n$$296750 = 260 \\times P $$\n$$P^* = 1,141 $$\n\n함수를 정의하고 `uniroot()` 함수로 최적가격을 구할 수 있다.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nf <- function(p)  ((130+130)*(p)-((130*675)+209000))\noptimal_price <- uniroot(f, lower=0, upper=10000)$root\n```\n:::\n\n\n시각화하면 다음과 같다.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(demand_tbl, aes(x = price)) + \n  stat_function(fun = demand_fn) +\n  geom_hline(yintercept = 0, linetype = 1, color = \"gray50\") +\n  theme_bw(base_family = \"NanumGothic\") +\n  geom_vline(xintercept = optimal_price, linetype = 2) +\n  labs(title = \"이익을 극대화하는 최적가격\",\n       x = \"가격\",\n       y = \"수량\") +\n  scale_x_continuous(labels = scales::comma) +\n  scale_y_continuous(labels = scales::comma) +\n  annotate(\"text\", x = 1350, y = 63000, \n           label = glue::glue(\"P* = {scales::comma(optimal_price)}\"), \n           size = 5, color = \"red\")\n```\n\n::: {.cell-output-display}\n![](price_opt_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## 이익 극대화\n\n가격을 0 에서 1,500 사이 변동을 통해 총 이익이 극대화되는 가격을 시각적으로 확인해보자.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nprice <- seq(500, 1500, 1)\nsales <- 209000 - 130 * price\n\nprofit_tbl <- tibble(price = price,\n                     sales = sales) %>% \n  mutate(revenue = price * sales) %>% \n  mutate(profit = sales * (price - 675) )\n\ntotal_contribution <- profit_tbl %>% \n  filter(profit == max(profit)) %>% \n  pull(profit)\n\nprofit_tbl %>% \n  ggplot(aes(x = price, y = profit)) +\n    geom_line() +\n    geom_vline(xintercept = optimal_price) +\n    scale_x_continuous(labels = scales::comma) +\n    scale_y_continuous(labels = scales::comma) +\n    annotate(\"text\", x = 1300, y = 27111000, \n             label = glue::glue(\"P* = {scales::comma(optimal_price)}\\n이익: {scales::comma(total_contribution)}\"), \n             size = 5, color = \"red\")  +\n    geom_point(aes(x= optimal_price, y = total_contribution), size = 3, color = \"blue\") +\n    theme_bw(base_family = \"NanumGothic\") +\n  labs(title = \"총 공헌이익 극대화 최적가격\",\n       x = \"가격\",\n       y = \"수량\") \n```\n\n::: {.cell-output-display}\n![](price_opt_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=672}\n:::\n:::\n",
    "supporting": [
      "price_opt_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}