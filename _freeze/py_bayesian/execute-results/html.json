{
  "hash": "31d9c66cc1fddcd1d797efbd8a144f26",
  "result": {
    "markdown": "---\ntitle: 베이지안 통계\nfilters:\n  - lightbox\nlightbox: auto\neditor_options:\n  chunk_output_type: console\n---\n\n**동적가격책정(Dynamic Pricing)** 방법론으로 자주 언급되는 **톰슨 샘플링(Thompson Sampling)**은 베이지안 통계 방법론에 근간을 두고 있다. \n기존 사람이 다양한 연구를 바탕으로 가격을 선정하여 캠페인 등을 통해 실행에 옮기거나 A/B 테스팅과 같이 실험을 반복해서 주기적으로 최적 가격을 옮겨가는 방식이 아니라 톰슨 샘플링을 통해 최적의 가격을 실시간으로 책정하며 동적으로 유지하는 체계를 갖추기 위해 가장 기본이 되는 베타분포와 베르누이분포를 먼저 이해해야 한다.\n\n톰슨 샘플링을 통해 풀려고 하는 문제는 가격정책을 몇가지로 지정한 후 예를 들어 3가지로 정했다고 가정하면 3가지 가격정책을 고객에게 보여주고 실시간으로 구매 혹은 비구매, 클릭 혹은 비클릭, 가입 혹은 비가입과 같은 성공 혹은 실패 결과를 얻고 이를 다시 가격정책에 반영하여 최적 가격을 찾아가는 방식이다.\n\n이와 같은 동적 가격결정 방식을 구현하기 위해 수학적으로 가장 단순한 성공과 실패를 모형화하는데 베르누이 분포를 가정하고 지속적인 사후 확률분포 갱신을 위해 베르누이 분포의 켤레 사전분포로 베타분포를 선택하여 사후확률도 베타분포가 나오도록 하여 설계한다.\n\n\n# 베타 분포\n\n베타분포는 그 유연한 특성으로 인해 다양한 확률분포의 켤레 사전분포로 많이 활용된다. 예를 들어 서로 다른 3가지 가격 정책이 있는데 어느 가격대를 고객이 선택할지 모를 경우 균등분포로 두고 사후적으로 고객선택여부를 판정하고자 하는 경우 베타분포의 형태모수를 $\\alpha =1, \\beta=1$로 선정하면 자연스럽게 균등분포를 모형에 넣을 수 있게 된다.\n\n\n## 감마와 베타 함수\n\n베타함수는 다음과 같은 $\\Gamma$ 함수로 표현할 수 있다. $\\Gamma$ 함수는 자연수의 계승 또는 팩토리얼(factorial)을 의미하며 수식으로 표현하면 다음과 같다.\n\n$$\\Gamma(n) = (n-1)!$$\n\n베타함수는 이항분포에 나오는 이항계수를 실수범위로 확장하여 일반화하는 형태로 알려져 있다.\n\n$$Beta(\\alpha, \\beta)=\\frac{\\Gamma(\\alpha)\\,\\Gamma(\\beta)}{\\Gamma(\\alpha+\\beta)}$$\n\n## 베타 분포\n\n베타분포는 베르누이, 이항, 음이항, 기하 분포의 켤레 사전분포(Conjugate Prior)이면서 0과 1사이 비율과 퍼센트지 무작위 사건을 모형화하는데 유용하다.\n예를 들어, 구매/비구매, 전환율 등이 0과 1사이 비율을 갖는 비결정사건으로 대입해볼 수 있다.\n\n[사후 확률(Posterior Probability)이 사전 확률(Prior Probability) 분포와 같은 분포 계열에 속하는 경우 그  사전확률분포를 **켤레 사전분포(Conjugate Prior)**라고 하고 이 경우 사후확률을 계산하기 쉬운 장점이 크다.]{.aside}\n\n$$Beta(\\alpha,\\beta):\\,\\, prob(x|\\alpha,\\beta)=\\frac{\\Gamma(\\alpha+\\beta)}{{\\Gamma(\\alpha)\\,\\Gamma(\\beta)}}x^{\\alpha-1}(1-x)^{\\beta-1}\\\\=\\frac{x^{\\alpha-1}(1-x)^{\\beta-1}}{B(\\alpha,\\beta)}$$\n\n베타분포의 평균과 분산은 $\\alpha$와 $\\beta$ 형태 모수를 사용하여 계산할 수 있다.\n\n$$E(x)=\\mu = \\frac{\\alpha}{\\alpha + \\beta}$$\n\n$$V(x)=\\frac{\\alpha\\beta}{(\\alpha+\\beta)^{2}(\\alpha+\\beta+1)}$$\n\n## 시각화\n\n예를 들어, $\\alpha=2,\\beta=2$ 형태모수를 갖는 $Beta(\\alpha=2,\\beta=2)$ 함수는 최고차항이 음의부호를 갖는 2차 방정식모양으로 표현할 수 있다. $\\alpha,\\beta$ 형태모수를 달리하여 0 과 1 사이 유연하게 다양한 함수형태를 모형화할 수 있는 것이 보여주고 있다.\n\n$$Beta(\\alpha=2,\\beta=2):\\,\\, prob(x|\\alpha,\\beta)=\\frac{\\Gamma(2+2)}{{\\Gamma(2)\\,\\Gamma(2)}}x^{2-1}(1-x)^{2-1}\\\\=\\frac{\\Gamma(4)}{{\\Gamma(2)\\,\\Gamma(2)}}x(1-x)=상수\\times(x-x^2)$$\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom scipy.stats import beta\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.linspace(0, 1.0, 100)\ny1 = beta.pdf(x, 0.5, 0.5)\ny2 = beta.pdf(x, 2, 2)\ny3 = beta.pdf(x, 2, 5)\ny4 = beta.pdf(x, 5, 1)\n\nplt.subplot(2, 2, 1) \nplt.title('Beta(a:0.5, b:0.5)')\nplt.plot(x, y1, \"r-\")\n\nplt.subplot(2, 2, 2) \nplt.title('Beta(a:2, b:2)')\nplt.plot(x, y2, \"g-\")\n\nplt.subplot(2, 2, 3) \nplt.title('Beta(a:2, b:5)')\nplt.plot(x, y3, \"b--\")\n\nplt.subplot(2, 2, 4) \nplt.title('Beta(a:5, b:1)')\nplt.plot(x, y4, \"b--\")\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](py_bayesian_files/figure-html/cell-2-output-1.png){width=658 height=470}\n:::\n:::\n\n\n## 베타분포 $\\alpha, \\beta$\n\n베타분포 형태모수 $\\alpha, \\beta$를 달리할 때 분포의 모양을 살펴보자. 추후 베이지안 갱신을 통해 사후 베타분포가 베르누이 분포와 켤레분포로 사용될 경우 $\\alpha, \\beta$ 값을 성공과 실패로 갱신할 땔 분포의 변화를 이해하는데 도움이 될 것이다.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# 데이터\nx = np.linspace(0, 1.0, 100)\ny11 = beta.pdf(x, 0.01, 0.01)\ny12 = beta.pdf(x, 0.01, 1)\ny13 = beta.pdf(x, 1, 0.01)\ny21 = beta.pdf(x, 1, 1)\ny22 = beta.pdf(x, 1, 2)\ny23 = beta.pdf(x, 1, 3)\ny31 = beta.pdf(x, 2, 1)\ny32 = beta.pdf(x, 3, 1)\ny33 = beta.pdf(x, 4, 1)\ny41 = beta.pdf(x, 4, 2)\ny42 = beta.pdf(x, 4, 3)\ny43 = beta.pdf(x, 4, 4)\n\n# 1번째 행 ===============\nplt.subplot(4, 3, 1) \nplt.title('Beta(a:0, b:0)')\nplt.plot(x, y11, \"r-\")\n\nplt.subplot(4, 3, 2) \nplt.title('Beta(a:0, b:1)')\nplt.plot(x, y12, \"r-\")\n\nplt.subplot(4, 3, 3) \nplt.title('Beta(a:1, b:0)')\nplt.plot(x, y13, \"r-\")\n\n# 2번째 행 ===============\nplt.subplot(4, 3, 4) \nplt.title('Beta(a:1, b:1)')\nplt.plot(x, y21, \"r-\")\n\nplt.subplot(4, 3, 5) \nplt.title('Beta(a:1, b:2)')\nplt.plot(x, y22, \"r-\")\n\nplt.subplot(4, 3, 6) \nplt.title('Beta(a:1, b:3)')\nplt.plot(x, y23, \"r-\")\n\n# 3번째 행 ===============\nplt.subplot(4, 3, 7) \nplt.title('Beta(a:2, b:1)')\nplt.plot(x, y31, \"r-\")\n\nplt.subplot(4, 3, 8) \nplt.title('Beta(a:3, b:1)')\nplt.plot(x, y32, \"r-\")\n\nplt.subplot(4, 3, 9) \nplt.title('Beta(a:4, b:1)')\nplt.plot(x, y33, \"r-\")\n\n# 4번째 행 ===============\nplt.subplot(4, 3, 10) \nplt.title('Beta(a:4, b:2)')\nplt.plot(x, y41, \"r-\")\n\nplt.subplot(4, 3, 11) \nplt.title('Beta(a:4, b:3)')\nplt.plot(x, y42, \"r-\")\n\nplt.subplot(4, 3, 12) \nplt.title('Beta(a:4, b:4)')\nplt.plot(x, y43, \"r-\")\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](py_bayesian_files/figure-html/cell-3-output-1.png){width=662 height=470}\n:::\n:::\n\n\n# 구매 사후확률 \n\n## 구매 혹은 비구매\n\n오프라인에서 고객별로 구매 혹은 비구매, 온라인에서는 구독 혹은 비구독, 클릭 혹은 비클릭 등과 같이 고객의 행동을 달리 표현할 수 있다. 이와 같은 구매 혹은 비구매는 성공 혹은 실패를 나타내는 베르누이 시행으로 표현할 수 있다. 여기서 $\\theta$는 구매확률을 나타낸다.\n\n$$X \\sim Bernoulli (\\theta)$$\n확률밀도함수는 다음과 같다. 여기서 $\\theta=0,1$ 성공과 실패값을 갖게 된다.\n\n$$p(x|\\theta) = \\theta^x (1-\\theta)^{1-x}$$\n\n## 가능도\n\n사후확률은 사전확률 곱하기 가능도로 정의된다.\n따라서, 사전확률은 $Beta(\\alpha, \\beta)$로 정의하고 베르누이 가능도 함수를 구해 둘을 곱하게 되면 사후확률을 구할 수 있다. 먼저 가능도는 다음과 같이 계산된다.\n\n\n$$\nL(\\theta;x) = p(\\{x_i\\}|\\theta) = \\prod_{i} p(x_i|\\theta)\\\\ = \\prod_{i} \\theta^{x_i}(1-\\theta)^{1-x_i}\\\\=\\theta^{\\sum_{i}{x_i}}(1-\\theta)^{\\sum_i{(1-x_i )}}\\\\=\\theta^{구매횟수}(1-\\theta)^{비구매횟수}\n$$\n\n## 사후확률\n\n베르누이분포의 사전확률 켤레분포가 베타분포로 치환하여 둘을 곱하게 되면 사후확률을 구할 수 있다.\n\n$$\np(\\theta|z,N) = \\frac{p(z,N|\\theta)p(\\theta)}{p(z,N)} \\approx\nL(\\theta;x) \\times p(\\theta)\n$$\n\n사전분포를 베타분포로 두고 베르누이분포의 가능도 함수를 활용하여 사후확률을 구하면 다음과 같이 수식으로 표현할 수 있다.\n\n$$\n\\begin{aligned}\np(\\theta \\mid X)\n&\\propto \\theta^{\\alpha + \\sum x_t - 1} (1 - \\theta)^{\\beta + N - \\sum x_t - 1}\n\\\\\n&\\qquad \\qquad \\downarrow\n\\\\\n\\theta \\mid X &\\sim \\text{Beta}\\Big(\\alpha + \\sum_{t=1}^{n} x_t, \\beta + N - \\sum_{t=1}^{n} x_t \\Big).\n\\end{aligned}\n$$\n\n# 시각화\n\n## 사전분포\n\n양극단이 적고 중앙이 두툼한 형태 정규분포 비슷한 사전분포를 가정한다.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nplt.rcParams['font.family'] = 'NanumGothic'\nx = np.linspace(0, 1.0, 100)\nprior_y = beta.pdf(x, 2, 2)\n\nplt.subplot(2, 2, 4) \nplt.title('사전분포 - 형태모수(a:2, b:2)를 갖는 베타분포')\nplt.plot(x, prior_y, \"b\")\n\nplt.tight_layout()\nplt.show()\n\n```\n\n::: {.cell-output .cell-output-display}\n![](py_bayesian_files/figure-html/cell-4-output-1.png){width=365 height=260}\n:::\n:::\n\n\n## 실제구매 데이터\n\n고객 $N$ 명중 $n$ 명이 구매를 했다고 가정하자. 예를 들어, \n광고 캠페인에 $N=10$ 명에게 문자를 돌려 $n=6$이 구매를 한 경우 가능도를 아래와 같이 베타분포로 표현할 수 있다.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nimport math\n\nlikelihoods = []\n\nprob_space = np.linspace(0, 1.0, 100)\n\nfor i in range(0, len(prob_space)):\n    likelihood = beta.pdf(prob_space[i], 10, 6)\n    likelihoods.append(likelihood)\n    # print(likelihood)\n\nplt.plot(prob_space, likelihoods)\nplt.title('가능도 함수 - 형태모수(\\u03b1=6, \\u03b2=4)를 갖는 베타분포')\nplt.show()\n\nprob_space[np.argmax(likelihoods)]\n```\n\n::: {.cell-output .cell-output-display}\n![](py_bayesian_files/figure-html/cell-5-output-1.png){width=570 height=432}\n:::\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n0.6464646464646465\n```\n:::\n:::\n\n\n## 사후확률\n\n베타분포를 사전확률로 갖고 베르누이/이항분포를 결합한 사후확률은 갱신된 형태모수 $\\alpha, \\beta$를 갖는 베타분포입니다. 따라서,\n\n$$사전분포 \\sim Beta(2,2) \\qquad \\rightarrow \\qquad 사후분포 \\sim Beta(2+6, 2+10-6)$$\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nposteriors = []\n\nprob_space = np.linspace(0, 1.0, 100)\n\nfor i in range(0, len(prob_space)):\n    posterior = beta.pdf(prob_space[i], 8, 6)\n    posteriors.append(posterior)\n    # print(posterior)\n\nplt.plot(prob_space, posteriors)\nplt.title('사후분포  - 형태모수(\\u03b1=8, \\u03b2=6)를 갖는 베타분포')\nplt.show()\n\nprob_space[np.argmax(posteriors)]\n```\n\n::: {.cell-output .cell-output-display}\n![](py_bayesian_files/figure-html/cell-6-output-1.png){width=570 height=432}\n:::\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n0.5858585858585859\n```\n:::\n:::\n\n\n## 결합\n\n앞서 각기 달리 시각화한 것을 사전, 가능도, 사후 분포를 함께 살펴보자. 0.5 전후 구매확률이 있다고 사전분포를 가정한 후 실제 데이터를 통해 수집된 내용은 10명 중 6명이 구매를 한 것이 확인되었다. 이를 바탕으로 사전분포와 가능도를 결합하여 사후 구매확률을 자동으로 갱신할 수 있다.\n\n\n:::{.panel-tabset}\n\n### 나눠보기\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# 사전분포 ===============\nplt.subplot(3, 1, 1)\nx = np.linspace(0, 1.0, 100)\ny_prior = beta.pdf(x, 2, 2)\n\nplt.plot(x, y_prior, \"g\")\nplt.title('Beta(\\u03b1=2, \\u03b2=2)')\n\n# 가능도 분포 ===============\nplt.subplot(3, 1, 2) \nplt.plot(prob_space, likelihoods, \"b\")\nplt.title('\"가능도 함수 - 형태모수(\\u03b1=6, \\u03b2=4)를 갖는 베타분포\",')\n\n# 사후분포 ===============\nplt.subplot(3, 1, 3) \nplt.plot(prob_space, posteriors, \"r\")\nplt.title('사후분포  - 형태모수(\\u03b1=8, \\u03b2=6)를 갖는 베타분포')\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](py_bayesian_files/figure-html/cell-7-output-1.png){width=650 height=471}\n:::\n:::\n\n\n### 합쳐보기\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nplt.title('사후분포  - 형태모수(\\u03b1=8, \\u03b2=6)를 갖는 베타분포')\n# plt.subtitle('사전, 가능도, 사후 분포')\n\nplt.plot(x, y_prior, \"g\")\nplt.plot(prob_space, likelihoods, \"b\")\nplt.plot(prob_space, posteriors, \"r\")\n\nplt.legend([\"사전분포\", \"가능도\", \"사후분포\"], loc=1)\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](py_bayesian_files/figure-html/cell-8-output-1.png){width=662 height=471}\n:::\n:::\n\n\n:::\n\n",
    "supporting": [
      "py_bayesian_files"
    ],
    "filters": [],
    "includes": {}
  }
}